implement a way to always keep an approved admin at db which u can use
---

store the admin signup form data as cookie / local storage in Vala-client
  When user revisits, the default login is always sent with cookie to vala-server (with info that he's still unapproved) hence 
  add a checker in authorize.js to compare the admin with given _id to that in db to see if he has got approved
    Add a refresh button in vala-client that re-sends the default login to check in db if user was approved 
  Let the user re-login at vala-client if he's approved as per the db, hence the manual login route handler will create a new token where he's shown as approved

learn to alter httponly cookie in testing

find a way to test for received hex _id string, instead of expect.any(String) 

caching code / assets to prevent re-fetch on page reload

login - use /api/authenticate & logout
one requests for admin, other admins approve

delete - .findByIdAndRemove
put reqs - .findByIdAndUpdate() with `{ new: true }` as 3rd arg to return the updated obj

add category: offer tags to product

http and https

amazon s3 for file storage

refresh jwt accly

add .d.ts or docstrings where needed

npm un md5 if not needed
---
add the mongodb api key in production.json
how to implement logins using existing google, fb etc accounts
problem in winston-mongodb's dependency: bl and readable-stream causing type error: "var isDuplex = stream instanceof Duplex; TypeError: Right-hand side of 'instanceof' is not callable"
very complicated to write tests for error-catchers.js
  complete tests for startup/


try out cms in other apps

---
EXTRAS: